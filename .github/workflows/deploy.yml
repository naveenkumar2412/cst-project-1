name: Deploy to ECS

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  ECR_REPO: naveen-crud-app
  CLUSTER_NAME: naveen-crud-app
  SERVICE_NAME: nave-crud-v1
  TASK_DEF_FILE: naveen-my-crud
  CONTAINER_NAME: my-app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
- name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, push image
      run: |
        IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:latest"
        docker build -t $IMAGE_URI .
        docker push $IMAGE_URI
        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
- name: Render ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.TASK_DEF_FILE }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ env.IMAGE_URI }}

    - name: Deploy ECS service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        cluster: ${{ env.CLUSTER_NAME }}
        service: ${{ env.SERVICE_NAME }}
        task-definition: ${{ steps.task-def.outputs.task-definition }}

