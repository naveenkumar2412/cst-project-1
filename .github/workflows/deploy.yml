name: Deploy to ECS

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  ECR_REPO: naveen-crud-app
  CLUSTER_NAME: naveen-crud-app
  SERVICE_NAME: nave-crud-v1
  TASK_DEF_NAME: naveen-my-crud
  CONTAINER_NAME: my-app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:latest"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Get current task definition
        id: get-task-def
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ env.TASK_DEF_NAME }} \
            --region ${{ env.AWS_REGION }} > task-def.json

      - name: Update task definition with new image
        id: register-task-def
        run: |
          IMAGE_URI=${{ env.IMAGE_URI }}
          CONTAINER_NAME=${{ env.CONTAINER_NAME }}

          NEW_TASK_DEF=$(jq --arg IMAGE "$IMAGE_URI" --arg NAME "$CONTAINER_NAME" \
            '.taskDefinition.containerDefinitions |= map(
              if .name == $NAME then .image = $IMAGE else . end
            ) |
            {
              family: .taskDefinition.family,
              networkMode: .taskDefinition.networkMode,
              containerDefinitions: .taskDefinition.containerDefinitions,
              requiresCompatibilities: .taskDefinition.requiresCompatibilities,
              cpu: .taskDefinition.cpu,
              memory: .taskDefinition.memory,
              executionRoleArn: .taskDefinition.executionRoleArn,
              taskRoleArn: .taskDefinition.taskRoleArn
            }' task-def.json)

          echo "$NEW_TASK_DEF" > new-task-def.json

          TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json \
            --region ${{ env.AWS_REGION }} | jq -r '.taskDefinition.taskDefinitionArn')

          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Deploy updated task definition to ECS
        run: |
          aws ecs update-service \
            --cluster ${{ env.CLUSTER_NAME }} \
            --service ${{ env.SERVICE_NAME }} \
            --task-definition ${{ env.TASK_DEF_ARN }} \
            --region ${{ env.AWS_REGION }}
